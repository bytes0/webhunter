# =================================================================
# Stage 1: Base image with Python and system dependencies
# =================================================================
FROM python:3.11-slim as base
WORKDIR /app
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    git \
    nmap \
    dnsutils \
    whois \
    unzip \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# =================================================================
# Stage 2: Go Tools Builder
# =================================================================
FROM golang:1.24-alpine as go-tools
WORKDIR /src
ENV GOPATH=/go
ENV PATH=$GOPATH/bin:$PATH

RUN go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest && \
    go install -v github.com/tomnomnom/waybackurls@latest && \
    go install -v github.com/projectdiscovery/pdtm/cmd/pdtm@latest

# Clean up Go caches to reduce layer size
RUN go clean -modcache -cache && \
    rm -rf /root/.cache /tmp/*

# =================================================================
# Stage 3: Python Application
# =================================================================
FROM base as final
WORKDIR /app

# Create a non-root user
RUN useradd -m -u 1000 appuser

# Install exploitation tools
RUN mkdir -p /app/tools && \
    git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git /app/tools/sqlmap-dev && \
    ln -s /app/tools/sqlmap-dev/sqlmap.py /app/tools/sqlmap && \
    chmod +x /app/tools/sqlmap-dev/sqlmap.py && \
    git clone --depth 1 https://github.com/s0md3v/XSStrike.git /app/tools/xsstrike-dev && \
    pip install --no-cache-dir -r /app/tools/xsstrike-dev/requirements.txt && \
    ln -s /app/tools/xsstrike-dev/xsstrike.py /app/tools/xsstrike && \
    chmod +x /app/tools/xsstrike-dev/xsstrike.py && \
    git clone --depth 1 https://github.com/commixproject/commix.git /app/tools/commix-dev && \
    ln -s /app/tools/commix-dev/commix.py /app/tools/commix && \
    chmod +x /app/tools/commix-dev/commix.py

# Copy Python requirements first for dependency caching
COPY --chown=appuser:appuser backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy compiled Go tools from the builder stage
COPY --from=go-tools /go/bin/nuclei /usr/local/bin/
COPY --from=go-tools /go/bin/waybackurls /usr/local/bin/
COPY --from=go-tools /go/bin/pdtm /usr/local/bin/

# Copy the rest of the application code
COPY --chown=appuser:appuser backend/ .

# Ensure app directory is owned by appuser
RUN chown -R appuser:appuser /app

# Switch to the non-root user
USER appuser

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"] 